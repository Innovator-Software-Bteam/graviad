{"version":3,"file":"static/js/588.6c724ea5.chunk.js","mappings":"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","sources":["grvd/molecules/Template/TemplateContext.tsx","grvd/molecules/Template/TemplateCard.tsx","grvd/pages/Dashboard/menu/MenuTemplatePage.tsx"],"sourcesContent":["import {createContext, useContext} from \"react\";\r\nimport {TTemplate} from \"grvd/molecules/Template/types\";\r\n\r\nexport const TemplateContext = createContext<TTemplate | undefined>(undefined);\r\nexport function useTemplate() {\r\n    return useContext(TemplateContext);\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {useUser} from \"grvd/contexts\";\r\nimport {twJoin} from \"tailwind-merge\";\r\nimport {useTemplate} from \"grvd/molecules/Template/TemplateContext\";\r\nimport {Typography} from \"@material-tailwind/react\";\r\nimport {FaRegHeart} from \"react-icons/fa6\";\r\nimport {IoAdd, IoRemoveOutline} from \"react-icons/io5\";\r\nimport axios from \"axios\";\r\nimport config from \"../../../config\";\r\nimport {IoIosRemove} from \"react-icons/io\";\r\n\r\nexport interface ITemplateCardProps extends React.ComponentProps<'div'> {\r\n\r\n}\r\n\r\nexport function TemplateCard(props: ITemplateCardProps) {\r\n    const user = useUser();\r\n    const merchant = user?.merchant;\r\n    const template = useTemplate();\r\n\r\n    useEffect(() => {\r\n    }, [user]);\r\n    return (\r\n        <div\r\n            key={template?.id}\r\n            className={twJoin(\r\n                \"template-card\",\r\n                'flex flex-col gap-8 justify-center items-center',\r\n                'p-4 w-fit aspect-[1/1]'\r\n            )}\r\n        >\r\n            <TemplateSample>\r\n                {props.children}\r\n            </TemplateSample>\r\n            <TemplateCardMain/>\r\n            <TemplateCardTool/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport interface ITemplateSampleProps extends React.ComponentProps<'div'> {\r\n\r\n}\r\n\r\nexport function TemplateSample(props: ITemplateSampleProps) {\r\n    return (\r\n        <div>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport interface ITemplateCardToolProps extends React.ComponentProps<'div'> {\r\n\r\n}\r\n\r\nexport type TInfoItem = {\r\n    icon?: React.ReactNode;\r\n    label: string;\r\n}\r\n\r\nexport function TemplateCardTool(props: ITemplateCardToolProps) {\r\n    const template = useTemplate();\r\n    const user = useUser();\r\n    const merchant = user?.merchant;\r\n    const [templateIds, setTemplateIds] = useState<number []>([]);\r\n\r\n    const items: TInfoItem[] = [\r\n        {\r\n            icon: <FaRegHeart size={20}/>,\r\n            label: template?.numberOfLikes?.toString() || '0'\r\n        }\r\n    ];\r\n    const renderInfoItem = (item: TInfoItem, index: any) => {\r\n        return (\r\n            <Typography\r\n                key={index}\r\n                variant={'small'}\r\n                className={twJoin(\r\n                    'flex flex-row gap-2 items-center',\r\n                    'text-grvd-theme-sys-dark-on-primary-variant font-medium',\r\n                    'px-2 py-1'\r\n                )}\r\n            >\r\n                {item.icon}\r\n                {item.label}\r\n            </Typography>\r\n        );\r\n    };\r\n    const handleAddTemplate = async () => {\r\n        axios\r\n            .post(`${config.server.url}/merchants/${merchant?.id}/add-template/${template?.id}`, {}, {\r\n                withCredentials: true\r\n            })\r\n            .then(res=>{\r\n                setTemplateIds([...templateIds, template?.id as any]);\r\n            })\r\n            .catch();\r\n    };\r\n    const handleRemoveTemplate = async () => {\r\n        axios\r\n            .post(`${config.server.url}/merchants/${merchant?.id}/remove-template/${template?.id}`, {}, {\r\n                withCredentials: true\r\n            })\r\n            .then(res=>{\r\n                setTemplateIds(templateIds.filter(id=>id!==template?.id));\r\n            })\r\n            .catch();\r\n    };\r\n    useEffect(() => {\r\n        if (merchant?.templateIds) setTemplateIds(merchant.templateIds);\r\n    }, [user]);\r\n    return (\r\n        <div className={twJoin(\r\n            'w-full',\r\n            'flex flex-row justify-between items-center gap-4',\r\n        )}>\r\n            <div\r\n                className={twJoin(\r\n                    'flex flex-row gap-4 justify-start items-center',\r\n                    'w-full'\r\n                )}\r\n            >\r\n                {items.map(renderInfoItem)}\r\n            </div>\r\n            {\r\n                !templateIds.includes(template?.id as any) ?\r\n                    <button className={twJoin(\r\n                        'text-grvd-theme-sys-dark-primary',\r\n                        'hover:scale-105 transition-transform duration-300 ease-in-out',\r\n                        'bg-white/10',\r\n                        'rounded-full',\r\n                        'relative'\r\n                    )}\r\n                            onClick={handleAddTemplate}\r\n                    >\r\n                        <div className={twJoin(\r\n                            'hover:animate-ping',\r\n                            'hover:bg-white/10',\r\n                            'w-full h-full ',\r\n                            'absolute rounded-full -z-0',\r\n                        )}/>\r\n                        <IoAdd size={48}/>\r\n                    </button>\r\n                    :\r\n                    <button className={twJoin(\r\n                        'text-grvd-theme-sys-dark-primary',\r\n                        'hover:scale-105 transition-transform duration-300 ease-in-out',\r\n                        'bg-white/10',\r\n                        'rounded-full',\r\n                    )}\r\n                            onClick={handleRemoveTemplate}\r\n                    >\r\n                        <IoIosRemove size={48}/>\r\n                    </button>\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport interface ITemplateCardMainProps extends React.ComponentProps<'div'> {\r\n\r\n}\r\n\r\nexport function TemplateCardMain(props: ITemplateCardMainProps) {\r\n    const template = useTemplate();\r\n    const renderTemplateTagLabels = (tagLabel: string) => {\r\n        return (\r\n            <Typography\r\n                key={tagLabel}\r\n                variant={'small'}\r\n                className={twJoin(\r\n                    'px-2 py-1 rounded-md',\r\n                    'text-grvd-theme-sys-dark-primary',\r\n                    'bg-white/10',\r\n                )}\r\n            >\r\n                {tagLabel}\r\n            </Typography>\r\n        );\r\n\r\n    };\r\n    return (\r\n        <div\r\n            className={twJoin(\r\n                'flex flex-col gap-4',\r\n                'w-full'\r\n            )}\r\n        >\r\n            <div\r\n                className={'flex flex-row flex-wrap items-center justify-start gap-2'}\r\n            >\r\n                {template?.tagLabels?.map(renderTemplateTagLabels)}\r\n            </div>\r\n            <div\r\n                className={'flex flex-col gap-0'}\r\n            >\r\n                <Typography\r\n                    variant={'h6'}\r\n                    className={'text-grvd-theme-sys-dark-primary'}\r\n                >\r\n                    {template?.name}\r\n                </Typography>\r\n                <Typography\r\n                    variant={'paragraph'}\r\n                    className={'text-grvd-theme-sys-dark-on-primary-variant'}\r\n                >\r\n                    {template?.brief}\r\n                </Typography>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import {IPageProps} from \"grvd/pages/types\";\r\nimport {\r\n    TemplateProfileCard,\r\n    TemplateProfileCardGlass,\r\n    TemplateProfileCardSimple, TemplateProfileCardWhiteSmooth\r\n} from \"grvd/molecules/User/templates/TemplateProfileCard\";\r\nimport {MerchantContext, useUser} from \"grvd/contexts\";\r\nimport {TemplateCard} from \"grvd/molecules/Template/TemplateCard\";\r\nimport {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport config from \"../../../../config\";\r\nimport {TTemplate} from \"grvd/molecules/Template/types\";\r\nimport {ProfileCard} from \"grvd/molecules\";\r\nimport {TemplateContext} from \"grvd/molecules/Template/TemplateContext\";\r\nimport {useFilterInput} from \"grvd/organisms/SearchInput/FilterInputContext\";\r\n\r\nexport interface IMenuTemplatePageProps extends IPageProps {\r\n}\r\n\r\nexport function MenuTemplatePage(props: IMenuTemplatePageProps) {\r\n    const user = useUser();\r\n    const [templates, setTemplates] = useState<TTemplate []>([]);\r\n    const {handleFilter} = useFilterInput();\r\n    const loadTemplates = async () => {\r\n        await axios\r\n            .get(`${config.server.url}/templates`, {\r\n                withCredentials: true,\r\n            })\r\n            .then((res) => {\r\n                setTemplates(res.data);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    useEffect(() => {\r\n        loadTemplates().then().catch();\r\n        console.log(templates);\r\n    }, []);\r\n    return (\r\n        <MerchantContext.Provider value={user?.merchant}>\r\n            <div className={'w-full flex flex-row gap-4 flex-wrap'}>\r\n                {templates.filter(template=>{\r\n                    return handleFilter ? handleFilter(template) : true;\r\n                }).map((template, index) => {\r\n                    return (\r\n                        <TemplateContext.Provider value={template} key={index}>\r\n                            <TemplateCard>\r\n                                <ProfileCard typeCustom={template.templateType}/>\r\n                            </TemplateCard>\r\n                        </TemplateContext.Provider>\r\n                    );\r\n                })}\r\n            </div>\r\n        </MerchantContext.Provider>\r\n    );\r\n}"],"names":["TemplateContext","createContext","undefined","useTemplate","useContext","TemplateCard","props","user","useUser","template","merchant","useEffect","_jsxs","className","twJoin","children","_jsx","TemplateSample","TemplateCardMain","TemplateCardTool","id","_template$numberOfLik","templateIds","setTemplateIds","useState","items","icon","FaRegHeart","size","label","numberOfLikes","toString","map","renderInfoItem","item","index","Typography","variant","includes","onClick","async","axios","post","concat","config","server","url","withCredentials","then","res","filter","catch","IoIosRemove","IoAdd","_template$tagLabels","tagLabels","tagLabel","name","brief","MenuTemplatePage","templates","setTemplates","handleFilter","useFilterInput","get","data","err","console","log","loadTemplates","MerchantContext","Provider","value","ProfileCard","typeCustom","templateType"],"sourceRoot":""}